
CONCEPTO IMPORTANTE: solo se abre una nueva sesion = (batch) cuando se especifica --new. Todo lo demás
se añade a la ultima sesion abierta. Es bueno que haya una sola sesion por noche de observacion. Asi los ficheros AZOTEA serán diarios.

TO DO
  
- algo con los strings de 8-bit en python 2 porbablkemente los exif metadata
- constructor ROI.stproi("[x1:y1,y1:y2"]). Parsear la expresion regular
   - metodos setROY(roi_str) setDarkROI() a CameraImage
- CameraCache en el modulo camimage.
- Leer el fichero config SOLO EN LOS CASOS en register --new y reduce --new
  esto oblifga a poner la ROI a cameraimage dinamicamente, no en el constructor
  - master_dark_t añadir columnas exposure_min, exposure_max, exposure_ave
- master dark por session y --all
- ejecutar los caso de prueba listados
- ejecucion silenciosa 
- batch management
  - batch merge ¿es neecsario? quizas no ...
- backup restore
- informes a lo IDA con plantilla JINJA
- fichero de log?, recuperar BD a partir de log?
- patch management (list, apply)
- documento con uso avanzado ¿readthedocs o Google Docs?


CASOS DE PRUEBA:
2) sesion inicial y añadir 2 ficheros LIGHT al directorio. Deberian incorporarse sin problemas
3) Sesion inicial y añadir 2 DARK más. Se debería rehacer el master DARK y recalcular los LIGHT restantes
4) Sesion multireduccion
  - unico observador
  - con multiples directorios , un de ellos con register --new y los demas con register --work-dir
4) Sesion de  multiobservador multireducción
  - varios observadores
  - varios directorios por observador



CASO DE USO: MULTIREDUCCION
- crear un fichero config por cda observador
- hacer un register de cada directorio abriendo sesion nueva y especificando el config del observador
- reducir por fases o global con --all en todos los casos


CONCEPTO IMPORTANTE: solo se abre una nueva sesion = (batch) cuando se especifica --new. Todo lo demás
se añade a la ultima sesion abierta. Es bueno que haya una sola sesion por noche de observacion. Asi los ficheros AZOTEA serán diarios.

TO DO
 
- ejecutar los caso de prueba listados
- azotea config diff
- Perparar todo para pasar a un modelo de estrella
  - ejecucion de SQLs bajo un directorio
    data/sql/schema/azotea.sql
    data/sql/data/*.sql (auziliar.sql, date.sql, time.sqil , etc)
  
  - pensar en un modelo general para atributos versionados con una capa DAO y una columna valid_flags
  - emplear el filter(), map() reduce() para mapear los atributos de interes y ver que ha cambiado
    ['zp', 'filter']
    {'name': "stars1", 'mac': '12:34:56:78:90:AB', 'zp': 20.50, 'filter': 'UV-IR/cut'} # ref
    {'name': "stars1", 'mac': '12:34:56:78:90:AB', 'zp': 20.32, 'filter': 'UV-IR/cut'} # cambio 1
    {'name': "stars1", 'mac': '12:34:56:78:90:AB', 'zp': 20.50, 'filter': 'GG543'}     # cambio 2
    {'name': "stars1", 'mac': '12:34:56:78:90:AB', 'zp': 20.43, 'filter': 'GG987'}

- parsear el Exif ExporureTime
- ver comno recuperar la config optica del EXIF. 
  En todo caso, añadir una seccion de configuracion optica en el fichero de config. Los datos EXIF si existen tuendran precedencia
. Completar modelos de canaras
- batch management
  - batch merge ¿es mecesario? quizas no ...
- backup restore
- modulo de reports: informes a lo IDA con plantilla JINJA
- fichero de log?, recuperar BD a partir de log?
- patch management (list, apply)
- documento con uso avanzado ¿readthedocs o Google Docs?
- algo con los strings de 8-bit en python 2 porbablemente los exif metadata


CASOS DE PRUEBA:
2) sesion inicial y añadir 2 ficheros LIGHT al directorio. Deberian incorporarse sin problemas
3) Sesion inicial y añadir 2 DARK más. Se debería rehacer el master DARK y recalcular los LIGHT restantes
4) Sesion multireduccion
  - unico observador
  - con multiples directorios , un de ellos con register --new y los demas con register --work-dir
4) Sesion de  multiobservador multireducción
  - varios observadores
  - varios directorios por observador
 3) caso de prueba, el programa no contempla la cámara
 



CASO DE USO: MULTIREDUCCION
- crear un fichero config por cda observador
- hacer un register de cada directorio abriendo sesion nueva y especificando el config del observador
- reducir por fases o global con --all en todos los casos
